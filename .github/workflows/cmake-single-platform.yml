# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: awalsh128/cache-apt-pkgs-action@latest
      with:
          packages: binutils-dev build-essential clang-format clang-tidy cmake curl expat gdb git gnuplot jq libcmocka-dev libcsv-dev   libcurl4-openssl-dev      libesmtp-dev      libiberty-dev libjson-c-dev     liblog4c-dev     libmnl-dev     libsqlite3-0   libsqlite3-dev    libssl-dev    linux-tools-generic    locales    net-tools netcat  ninja-build openssl pandoc pandoc-plantuml-filter pkg-config python-is-python3 python3-pip python3-venv sqlite3 sudo wget zlib1g-dev
          version: 1.0

    - name: Build
      # Build your program with the given configuration
      run: safu/ci/build.sh

