# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '25 16 * * 0'

jobs:
  analyze:
    name: Analyze
    # Runner size impacts CodeQL analysis time. To learn more, please see:
    #   - https://gh.io/recommended-hardware-resources-for-running-codeql
    #   - https://gh.io/supported-runners-and-hardware-resources
    #   - https://gh.io/using-larger-runners
    # Consider using larger runners for possible analysis time improvements.
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'c-cpp', 'python' ]
        # CodeQL supports [ 'c-cpp', 'csharp', 'go', 'java-kotlin', 'javascript-typescript', 'python', 'ruby', 'swift' ]
        # Use only 'java-kotlin' to analyze code written in Java, Kotlin or both
        # Use only 'javascript-typescript' to analyze code written in JavaScript, TypeScript or both
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages (C/C++, C#, Go, Java, or Swift).
    # If this step fails, then you should remove it and run the build manually (see below)
    # - name: Autobuild
    #  uses: github/codeql-action/autobuild@v3

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          build-essential \
          cmake \
          curl \
          git \
          libcmocka-dev \
          libcurl4-openssl-dev \
          libesmtp-dev \
          libjson-c-dev \
          liblog4c-dev \
          libmnl-dev \
          libsqlite3-0 \
          libsqlite3-dev \
          libssl-dev \
          ninja-build \
          pkg-config \
          python-is-python3 \
          python3-pip \
          python3-venv \
          sqlite3
      - name: checkout and build cmocka_extensions
        run: |
          git clone https://github.com/Elektrobit/cmocka_extensions.git /tmp/cmocka_extensions
          cmake -B /tmp/cmocka_extensions/build /tmp/cmocka_extensions -DUNIT_TESTS=off -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          make -C /tmp/cmocka_extensions/build all
          sudo make -C /tmp/cmocka_extensions/build install
      - name: checkout and build cmocka_mocks
        run: |
          git clone https://github.com/Elektrobit/cmocka_mocks.git /tmp/cmocka_mocks
          cmake -B /tmp/cmocka_mocks/build /tmp/cmocka_mocks -DUNIT_TESTS=off -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          make -C /tmp/cmocka_mocks/build all
          sudo make -C /tmp/cmocka_mocks/build install
      - name: checkout and build safu
        run: |
          git clone https://github.com/Elektrobit/safu.git /tmp/safu
          cmake -B /tmp/safu/build /tmp/safu -DUNIT_TESTS=off -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          make -C /tmp/safu/build all
          sudo make -C /tmp/safu/build install
      - name: checkout and build samconf
        run: |
          git clone https://github.com/Elektrobit/samconf.git /tmp/samconf
          cmake -B /tmp/samconf/build /tmp/samconf -DUNIT_TESTS=off -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          make -C /tmp/samconf/build all
          sudo make -C /tmp/samconf/build install
      - name: Build ${{ matrix.build_type }}
        env:
          DESTDIR: ${{ github.workspace }}/build/${{ matrix.build_type }}/dist 
        run: |
          cmake -B ./build/${{ matrix.build_type }}/cmake . -DUNIT_TESTS=off -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          make -C ./build/${{ matrix.build_type }}/cmake all install


    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
